<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="mapper.TeacherMapper">

    <!--【一对多，按结果嵌套处理】获取老师对应的学生-->
    <select id="getTeacher1" resultMap="TeacherStudent1">
        <!--
            思路:
                1. 从学生表和老师表中查出学生id，学生姓名，老师姓名
                2. 对查询出来的操作做结果集映射
                    1. 集合的话，使用collection！
                        JavaType和ofType都是用来指定对象类型的
                        JavaType是用来指定pojo中属性的类型
                        ofType指定的是映射到list集合属性中pojo的类型。
        -->
        SELECT s.id, s.student_name, t.teacher_name
        FROM mybatis.student AS s, mybatis.teacher AS t
        WHERE s.tid = t.id
          AND t.id = #{id}
    </select>
    <resultMap id="TeacherStudent1" type="pojo.Teacher">
        <result property="teacherName" column="teacher_name"/>
        <collection property="students" ofType="pojo.base.Student">
            <result property="id" column="id"/>
            <result property="studentName" column="student_name"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

    <!--【一对多，按查询嵌套处理】获取老师对应的学生-->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        SELECT * FROM mybatis.teacher WHERE id=#{id};
    </select>
    <resultMap id="TeacherStudent2" type="pojo.Teacher">
        <!--column是一对多的外键 , 写的是一的主键的列名-->
        <collection property="students" javaType="ArrayList" ofType="pojo.base.Student" column="id" select="getStudentByTeacherId"/>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="pojo.Teacher">
        SELECT * FROM mybatis.student WHERE tid = #{id};
    </select>
</mapper>